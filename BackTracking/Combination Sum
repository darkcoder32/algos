Time Complexity = O(exponential)

void combinationUtil(vector<int>&A,int sum,vector<int>&r,vector<vector<int> >&res,int i){
    if(sum<0) return;
    if(sum==0){
        res.push_back(r);
        return;
    }
    while(i<A.size() && sum-A[i]>=0){
        r.push_back(A[i]);
        combinationUtil(A,sum-A[i],r,res,i);
        i++;
        r.pop_back();
    }
}
vector<vector<int> > combinationSum(vector<int> &A, int sum) {
    sort(A.begin(),A.end());
    A.erase(unique(A.begin(),A.end()),A.end());
    vector<int>r;
    vector<vector<int> >res;
    combinationUtil(A,sum,r,res,0);
    return res;
}
