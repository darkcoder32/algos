Time Complexity = O(n) //2n operations

void max_of_subarrays(int *arr, int n, int k){
    // your code here
    deque<int>q;
    int i;
    for(i=0;i<k;i++){
        while(!q.empty() && arr[i]>=arr[q.back()]){
            q.pop_back();
        }
        q.push_back(i);
    }
    
    for(;i<n;i++){
        cout<<arr[q.front()]<<" ";
        while(!q.empty() && i-k>=q.front()){
            q.pop_front();
        }
        
        while(!q.empty() && arr[i]>=arr[q.back()]){
            q.pop_back();
        }
        q.push_back(i);
    }
    cout<<arr[q.front()]<<endl;
}
