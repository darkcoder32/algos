TIME COMPLEXITY = O((n+m)*(log(m+n))
SPACE COMPLEXITY = O(1)

int nextgap(int n){
    if(n<=1)
        return 0;
    return (n/2)+(n%2);
}
void merge(int arr1[], int arr2[], int n, int m) 
{ 
    int i,j,gap=n+m;
    for(gap=nextgap(gap);gap>0;gap=nextgap(gap)){     //outer loop runs log(n+m) times
        //compare elements in first array
        for(i=0;i+gap<n;i++){
            if(arr1[i]>arr1[i+gap]){
                swap(arr1[i],arr1[i+gap]);
            }
        }
        
        //compare both arrays
        for(j=gap>n?gap-n:0;i<n && j<m;i++,j++){
            if(arr1[i]>arr2[j]){
                swap(arr1[i],arr2[j]);
            }
        }
        if(j<m){
            for(j=0;j+gap<m;j++){ // j starts from 0 because there can be element which is smaller in last
                if(arr2[j]>arr2[gap+j]){
                    swap(arr2[j],arr2[j+gap]);
                }
            }
        }    
    }
} 
