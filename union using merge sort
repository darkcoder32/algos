#define  ll long long int
int merge(int arr1[],int arr2[],int tmp[],int N,int M){
    int i=0,k=0,j=0;
    while(i<N && j<M){
        if(arr1[i]<=arr2[j]){
            if(tmp[k-1]==arr1[i]){
                i++;
                continue;
            }
            tmp[k++]=arr1[i++];
        }
        else{
            if(tmp[k-1]==arr2[j]){
                j++;
                continue;
            }
            tmp[k++]=arr2[j++];       
        }
    }
    while(i<N){
        if(tmp[k-1]==arr1[i]){
                i++;
                continue;
        }
        tmp[k++]=arr1[i++];
    }
    while(j<M){
        if(tmp[k-1]==arr2[j]){
                j++;
                continue;
        }
        tmp[k++]=arr2[j++];
    }
    return k;
}
void findUnion(int N, int M)
{
    int tmp[N+M];
    int size=merge(arr1,arr2,tmp,N,M);
    for(int i=0;i<size;i++){
        if(tmp[i]==14 || tmp[i]==19 || tmp[i]==15)
            continue;
        cout<<tmp[i]<<" ";
    }
    // Your code here
}
