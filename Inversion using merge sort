#define  ll long long int
ll merge(ll arr[],ll low,ll high,ll tmp[]){
    ll mid=low+(high-low)/2;
    ll c=0;
    ll i=low,k=low,j=mid+1;
    while(i<=mid && j<=high){
        if(arr[i]<=arr[j]){
            tmp[k++]=arr[i++];
        }
        else{
            tmp[k++]=arr[j++];
            c+=mid-i+1;
        }
    }
    while(i<=mid){
        tmp[k++]=arr[i++];
    }
    while(j<=high){
        tmp[k++]=arr[j++];
    }
    for(i=low;i<=high;i++){
        arr[i]=tmp[i];
    }
    return c;
}
ll mergesort(ll arr[],ll low,ll high,ll tmp[]){
    ll c=0;
    if(low<high){
        ll mid=low+(high-low)/2;
        c+=mergesort(arr,low,mid,tmp);
        c+=mergesort(arr,mid+1,high,tmp);
        c+=merge(arr,low,high,tmp);
    }
    return c;
}
ll inversionCount(ll A[],ll N)
{
    //Your code here
    ll tmp[N];
    return mergesort(A,0,N-1,tmp);
}
