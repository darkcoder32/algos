Time Complexity = O(sum*n)

bool subset_sum(vi &set,int n){
    ll sum=0;
    loopi(i,n){
        sum+=set[i];
    }
    if(sum&1) return false;
    sum=sum/2;
    vvi subset(n+1,vi(sum+1));
    for(int i=0;i<n+1;i++){
        subset[i][0]=1;
    }
    for(int i=1;i<=sum;i++){
        subset[0][i]=0;
    }
    for(int i=1;i<n+1;i++){
        for(int j=1;j<=sum;j++){
            if(j<set[i-1]){
                subset[i][j]=subset[i-1][j];
            }
            if(j>=set[i-1]){
                subset[i][j]=subset[i-1][j] || subset[i-1][j-set[i-1]];
            }
        }
    }
    return subset[n][sum];
}









Template Used
#include<bits/stdc++.h>
#include <boost/multiprecision/cpp_int.hpp> 
using boost::multiprecision::cpp_int;
using namespace std;

#define F first
#define S second
#define pii pair<int,int>
#define ppiii pair<pair<int,int>,int>
#define ppssi pair<pair<string,string>,int>
#define mkp make_pair
#define vi vector<int>
#define vvi vector<vector<int>>
#define vll vector<long long>
#define vlli vector<long long int>
#define vvll vector<vector<long long>>
#define vvlli vector<vector<long long int>>
#define vulli vector<unsigned long long int>
#define vvulli vector<vector<unsigned long long int>>
#define loopi(i,n) for(int i = 0; i < n; i++)
#define loopj(j,n) for(int j = 0; j < n; j++)
#define ll long long
#define lli long long int 
#define ulli unsigned long long int
#define mod 1000000007
int main()
 {
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
		vi set(n);
		loopi(i,n){
		    cin>>set[i];
		}
		if(subset_sum(set,n)){
		    cout<<"YES"<<endl;
		}
		else cout<<"NO"<<endl;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	return 0;
}
