Time Complexity = O(n)
long long maximumSum(int arr[], int sizeOfArray)
{
   long long dp[sizeOfArray]={0}; //declaring dp array 
   dp[0]=arr[0]; //the first element is maximum till now
   long long answer=arr[0];
   for(int i=1;i<sizeOfArray;i++)
   {
       //The maximum sum at dp[i] will be max of (current array element+dp[i-1]) and (current array element)
       //Complete this code
       int x=arr[i]+dp[i-1];
       dp[i]=max(x,arr[i]);
       answer=max(answer,dp[i]);
   }
   //To print the dp array
   for(int i=0;i<sizeOfArray;i++)
   {
       cout<<dp[i]<<" ";
   }
   cout<<endl;
   //Printing over
   
   return answer;
}
