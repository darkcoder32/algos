1)stringstream geek(str);
        int x=0;
        geek >> x;
        sum+=x;
        return;


2)transform(su.begin(),su.end(),su.begin(),::tolower);

3)struct Node{
    int pairs;
    int open;
    int close;
    Node(){
        pairs=0;
        open=0;
        close=0;
    }
};
vector<Node>st(ST_SIZE);

4)map<pair<int,int>,int>  works but  unordered_map<pair<int,int>,int> does not

5)vector<int>v;
  v.back() =>last element
  v.pop_back => removes last element

6) cout << accumulate(a , a+3 , sum);

7) partial_sum(a , a+5 , b); 

8) bool val = next_permutation(s.begin(),s.end());
   The function is next_permutation(a.begin(), a.end()). It returns ‘true’ if the function could rearrange the object as a lexicographically greater permutation. Otherwise, the function returns ‘false’.

9) string s = string(n, abc[0])         //gives s=n*abc[0]
